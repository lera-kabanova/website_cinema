// <auto-generated />
using System;
using CinemaProject.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace cinema_mng_backend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250522142539_AddNavigationPropertiesToBooking")]
    partial class AddNavigationPropertiesToBooking
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("CinemaProject.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("BookingTime")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("FinalPrice")
                        .HasColumnType("TEXT");

                    b.Property<int>("ScheduleId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SeatId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("SeatNumber")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SeatRow")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TicketTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ZoneId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ScheduleId");

                    b.HasIndex("TicketTypeId");

                    b.HasIndex("ZoneId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("CinemaProject.Models.Hall", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Capacity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Halls", t =>
                        {
                            t.HasCheckConstraint("CK_Hall_Type", "Type IN ('standard', 'comfort', 'vip')");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacity = 100,
                            Name = "Зал 1 (Стандартный)",
                            Type = "standard"
                        },
                        new
                        {
                            Id = 2,
                            Capacity = 50,
                            Name = "Зал 2 (Комфортный)",
                            Type = "comfort"
                        },
                        new
                        {
                            Id = 3,
                            Capacity = 30,
                            Name = "VIP Зал",
                            Type = "vip"
                        });
                });

            modelBuilder.Entity("CinemaProject.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AgeRating")
                        .HasColumnType("TEXT");

                    b.Property<string>("BackgroundImageUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int>("Duration")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("PopularityScore")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TrailerUrl")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("CinemaProject.Models.PriceModifier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Condition")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("Multiplier")
                        .HasColumnType("REAL");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("PriceModifiers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Condition = "{\"start_time\": \"18:00\", \"end_time\": \"22:00\"}",
                            Multiplier = 1.2f,
                            Type = "time_slot"
                        },
                        new
                        {
                            Id = 2,
                            Condition = "{\"min_score\": 0.8}",
                            Multiplier = 1.3f,
                            Type = "popularity"
                        });
                });

            modelBuilder.Entity("CinemaProject.Models.Row", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("HallId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Seats")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Spacing")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("HallId");

                    b.ToTable("Rows");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            HallId = 1,
                            Number = 1,
                            Seats = 5,
                            Spacing = "extraWide",
                            Type = "sofa"
                        },
                        new
                        {
                            Id = 2,
                            HallId = 1,
                            Number = 2,
                            Seats = 10,
                            Spacing = "normal",
                            Type = "standard"
                        },
                        new
                        {
                            Id = 3,
                            HallId = 1,
                            Number = 3,
                            Seats = 10,
                            Spacing = "normal",
                            Type = "standard"
                        },
                        new
                        {
                            Id = 4,
                            HallId = 1,
                            Number = 4,
                            Seats = 10,
                            Spacing = "normal",
                            Type = "standard"
                        },
                        new
                        {
                            Id = 5,
                            HallId = 1,
                            Number = 5,
                            Seats = 10,
                            Spacing = "normal",
                            Type = "standard"
                        },
                        new
                        {
                            Id = 6,
                            HallId = 1,
                            Number = 6,
                            Seats = 10,
                            Spacing = "normal",
                            Type = "standard"
                        },
                        new
                        {
                            Id = 7,
                            HallId = 1,
                            Number = 7,
                            Seats = 10,
                            Spacing = "normal",
                            Type = "standard"
                        },
                        new
                        {
                            Id = 8,
                            HallId = 1,
                            Number = 8,
                            Seats = 10,
                            Spacing = "normal",
                            Type = "standard"
                        },
                        new
                        {
                            Id = 9,
                            HallId = 1,
                            Number = 9,
                            Seats = 8,
                            Spacing = "wide",
                            Type = "loveSeat"
                        },
                        new
                        {
                            Id = 10,
                            HallId = 2,
                            Number = 1,
                            Seats = 5,
                            Spacing = "extraWide",
                            Type = "sofa"
                        },
                        new
                        {
                            Id = 11,
                            HallId = 2,
                            Number = 2,
                            Seats = 10,
                            Spacing = "normal",
                            Type = "standard"
                        },
                        new
                        {
                            Id = 12,
                            HallId = 2,
                            Number = 3,
                            Seats = 10,
                            Spacing = "normal",
                            Type = "standard"
                        },
                        new
                        {
                            Id = 13,
                            HallId = 2,
                            Number = 4,
                            Seats = 10,
                            Spacing = "normal",
                            Type = "standard"
                        },
                        new
                        {
                            Id = 14,
                            HallId = 2,
                            Number = 5,
                            Seats = 10,
                            Spacing = "normal",
                            Type = "standard"
                        },
                        new
                        {
                            Id = 15,
                            HallId = 2,
                            Number = 6,
                            Seats = 10,
                            Spacing = "normal",
                            Type = "standard"
                        },
                        new
                        {
                            Id = 16,
                            HallId = 2,
                            Number = 7,
                            Seats = 10,
                            Spacing = "normal",
                            Type = "standard"
                        },
                        new
                        {
                            Id = 17,
                            HallId = 2,
                            Number = 8,
                            Seats = 10,
                            Spacing = "normal",
                            Type = "standard"
                        },
                        new
                        {
                            Id = 18,
                            HallId = 2,
                            Number = 9,
                            Seats = 8,
                            Spacing = "wide",
                            Type = "loveSeat"
                        },
                        new
                        {
                            Id = 19,
                            HallId = 2,
                            Number = 10,
                            Seats = 6,
                            Spacing = "wide",
                            Type = "recliner"
                        },
                        new
                        {
                            Id = 20,
                            HallId = 3,
                            Number = 1,
                            Seats = 8,
                            Spacing = "normal",
                            Type = "loveSeat"
                        },
                        new
                        {
                            Id = 21,
                            HallId = 3,
                            Number = 2,
                            Seats = 8,
                            Spacing = "normal",
                            Type = "loveSeat"
                        },
                        new
                        {
                            Id = 22,
                            HallId = 3,
                            Number = 3,
                            Seats = 8,
                            Spacing = "normal",
                            Type = "recliner"
                        },
                        new
                        {
                            Id = 23,
                            HallId = 3,
                            Number = 4,
                            Seats = 8,
                            Spacing = "normal",
                            Type = "recliner"
                        },
                        new
                        {
                            Id = 24,
                            HallId = 3,
                            Number = 5,
                            Seats = 6,
                            Spacing = "wide",
                            Type = "sofa"
                        },
                        new
                        {
                            Id = 25,
                            HallId = 3,
                            Number = 6,
                            Seats = 6,
                            Spacing = "wide",
                            Type = "sofa"
                        });
                });

            modelBuilder.Entity("CinemaProject.Models.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("HallId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MovieId")
                        .HasColumnType("INTEGER");

                    b.Property<TimeSpan>("Time")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("HallId");

                    b.HasIndex("MovieId");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("CinemaProject.Models.TicketType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("Multiplier")
                        .HasColumnType("REAL");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TicketTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Multiplier = 1f,
                            Name = "Стандартный"
                        },
                        new
                        {
                            Id = 2,
                            Multiplier = 0.8f,
                            Name = "Студенческий"
                        },
                        new
                        {
                            Id = 3,
                            Multiplier = 0.7f,
                            Name = "Пенсионный"
                        });
                });

            modelBuilder.Entity("CinemaProject.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CinemaProject.Models.Zone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("BasePrice")
                        .HasColumnType("TEXT");

                    b.Property<int>("HallId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("HallId");

                    b.ToTable("Zones");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BasePrice = 10.00m,
                            HallId = 1,
                            Name = "Стандартное кресло"
                        },
                        new
                        {
                            Id = 2,
                            BasePrice = 15.00m,
                            HallId = 1,
                            Name = "Реклайнер"
                        },
                        new
                        {
                            Id = 3,
                            BasePrice = 20.00m,
                            HallId = 2,
                            Name = "Диван"
                        },
                        new
                        {
                            Id = 4,
                            BasePrice = 18.00m,
                            HallId = 2,
                            Name = "LoveSeats"
                        },
                        new
                        {
                            Id = 5,
                            BasePrice = 25.00m,
                            HallId = 3,
                            Name = "VIP Диван"
                        },
                        new
                        {
                            Id = 6,
                            BasePrice = 30.00m,
                            HallId = 3,
                            Name = "VIP Реклайнер"
                        });
                });

            modelBuilder.Entity("CinemaProject.Models.Booking", b =>
                {
                    b.HasOne("CinemaProject.Models.Schedule", "Schedule")
                        .WithMany()
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CinemaProject.Models.TicketType", "TicketType")
                        .WithMany()
                        .HasForeignKey("TicketTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CinemaProject.Models.Zone", "Zone")
                        .WithMany()
                        .HasForeignKey("ZoneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Schedule");

                    b.Navigation("TicketType");

                    b.Navigation("Zone");
                });

            modelBuilder.Entity("CinemaProject.Models.Row", b =>
                {
                    b.HasOne("CinemaProject.Models.Hall", "Hall")
                        .WithMany("Rows")
                        .HasForeignKey("HallId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hall");
                });

            modelBuilder.Entity("CinemaProject.Models.Schedule", b =>
                {
                    b.HasOne("CinemaProject.Models.Hall", "Hall")
                        .WithMany()
                        .HasForeignKey("HallId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CinemaProject.Models.Movie", "Movie")
                        .WithMany()
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hall");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("CinemaProject.Models.Zone", b =>
                {
                    b.HasOne("CinemaProject.Models.Hall", "Hall")
                        .WithMany("Zones")
                        .HasForeignKey("HallId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hall");
                });

            modelBuilder.Entity("CinemaProject.Models.Hall", b =>
                {
                    b.Navigation("Rows");

                    b.Navigation("Zones");
                });
#pragma warning restore 612, 618
        }
    }
}
